include tests/arch/Makefile.sub
include tests/backend/i386/Makefile.sub
include tests/evaluator/Makefile.sub
include tests/types/Makefile.sub
include tests/util/Makefile.sub
include tests/rvsdg/Makefile.sub

TESTPROGS=test-runner

TEST_SOURCES = tests/testtypes.c tests/testarch.c tests/testnodes.c tests/test-runner.c tests/test-registry.c $(patsubst %, tests/%.c, $(TESTS))
SOURCES += $(TEST_SOURCES)

tests/test-runner: LDFLAGS+=-L. -Wl,-whole-archive -ljive -Wl,-no-whole-archive
tests/test-runner: %: $(patsubst %.c, %.la, $(TEST_SOURCES)) libjive.a
	$(CXX) -o $@ $(filter %.la, $^) $(LDFLAGS)

$(patsubst %, tests/%.la, $(TESTS)): CPPFLAGS+=-Itests
$(patsubst %, .dep/tests/%.la.d, $(TESTS)): CPPFLAGS+=-Itests
$(patsubst %, .dep/tests/%.lo.d, $(TESTS)): CPPFLAGS+=-Itests

TESTLOG=true

# Font colors for terminal
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

.PHONY: check
check: CFLAGS+=-Wall -Wpedantic --std=c++14
check: CPPFLAGS+=-I$(JIVE_ROOT)/include
check: tests/test-runner
	@rm -rf check.log passed.log failed.log
	@for TEST in `tests/test-runner`; do \
		$(TESTLOG) -n "$$TEST: " ; \
		if tests/test-runner $$TEST >>check.log 2>&1 ; then \
			$(TESTLOG) pass ; echo "$$TEST" >> passed.log ; \
		else \
			$(TESTLOG) FAIL ; echo "$$TEST" >> failed.log ; \
		fi ; \
	done
	@if [ -e failed.log ] ; then \
		if [ -z ${EXPECT_FAIL_TESTS+x} ] ; then \
			echo $(Red)Failed:$(NC) ; \
			cat failed.log ; \
		else \
			grep -v $(EXPECT_FAIL_TESTS) < failed.log | sed -e "s/^/Failed: /" ; \
		fi \
        else \
		echo $(GREEN)All tests passed$(NC) ; \
	fi
	@if [ "x$(EXPECT_FAIL_TESTS)" != x ] ; then echo "Expected failures: $(EXPECT_FAIL_TESTS)" ; fi

.PHONY: valgrind-check
valgrind-check: tests/test-runner
	@rm -rf check.log passed.log failed.log
	@for TEST in `tests/test-runner`; do \
		$(TESTLOG) -n "$$TEST: " ; \
		if valgrind --leak-check=full --error-exitcode=1 tests/test-runner $$TEST >>check.log 2>&1 ; then \
			$(TESTLOG) pass ; echo "$$TEST" >> passed.log ; \
		else \
			$(TESTLOG) FAIL ; echo "$$TEST" >> failed.log ; \
		fi ; \
	done
	@if [ -e failed.log ] ; then \
		if [ -z ${EXPECT_FAIL_TESTS+x} ] ; then \
			echo "Failed:" ; \
			cat failed.log ; \
		else \
			grep -v $(EXPECT_FAIL_TESTS) < failed.log | sed -e "s/^/Failed: /" ; \
		fi \
	fi
	@if [ "x$(EXPECT_FAIL_TESTS)" != x ] ; then echo "Expected failures: $(EXPECT_FAIL_TESTS)" ; fi

.PHONY: jive-test-clean
jive-test-clean:
	@rm -rf $(TESTPROGS)
